function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

import { useCallback, useRef, useState } from 'react';
export default function useStateRef(initialState) {
  var _useState = useState(initialState),
      _useState2 = _slicedToArray(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var ref = useRef();
  var setValue = useCallback(function (nextValue) {
    if (typeof nextValue === 'function') {
      setValue(function (state) {
        nextValue = nextValue(state);
        ref.current = nextValue;
        return nextValue;
      });
    } else {
      ref.current = nextValue;
      setValue(nextValue);
    }
  }, [ref, setState]);
  ref.current = state;
  return [state, setState, ref];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9ob29rcy9pbnRlcm5hbC91c2VTdGF0ZVJlZi5qcyJdLCJuYW1lcyI6WyJ1c2VDYWxsYmFjayIsInVzZVJlZiIsInVzZVN0YXRlIiwidXNlU3RhdGVSZWYiLCJpbml0aWFsU3RhdGUiLCJzdGF0ZSIsInNldFN0YXRlIiwicmVmIiwic2V0VmFsdWUiLCJuZXh0VmFsdWUiLCJjdXJyZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxTQUFTQSxXQUFULEVBQXNCQyxNQUF0QixFQUE4QkMsUUFBOUIsUUFBOEMsT0FBOUM7QUFFQSxlQUFlLFNBQVNDLFdBQVQsQ0FBcUJDLFlBQXJCLEVBQW1DO0FBQUEsa0JBQ3RCRixRQUFRLENBQUNFLFlBQUQsQ0FEYztBQUFBO0FBQUEsTUFDekNDLEtBRHlDO0FBQUEsTUFDbENDLFFBRGtDOztBQUVoRCxNQUFNQyxHQUFHLEdBQUdOLE1BQU0sRUFBbEI7QUFDQSxNQUFNTyxRQUFRLEdBQUdSLFdBQVcsQ0FDMUIsVUFBQVMsU0FBUyxFQUFJO0FBQ1gsUUFBSSxPQUFPQSxTQUFQLEtBQXFCLFVBQXpCLEVBQXFDO0FBQ25DRCxNQUFBQSxRQUFRLENBQUMsVUFBQUgsS0FBSyxFQUFJO0FBQ2hCSSxRQUFBQSxTQUFTLEdBQUdBLFNBQVMsQ0FBQ0osS0FBRCxDQUFyQjtBQUVBRSxRQUFBQSxHQUFHLENBQUNHLE9BQUosR0FBY0QsU0FBZDtBQUVBLGVBQU9BLFNBQVA7QUFDRCxPQU5PLENBQVI7QUFPRCxLQVJELE1BUU87QUFDTEYsTUFBQUEsR0FBRyxDQUFDRyxPQUFKLEdBQWNELFNBQWQ7QUFFQUQsTUFBQUEsUUFBUSxDQUFDQyxTQUFELENBQVI7QUFDRDtBQUNGLEdBZnlCLEVBZ0IxQixDQUFDRixHQUFELEVBQU1ELFFBQU4sQ0FoQjBCLENBQTVCO0FBbUJBQyxFQUFBQSxHQUFHLENBQUNHLE9BQUosR0FBY0wsS0FBZDtBQUVBLFNBQU8sQ0FBQ0EsS0FBRCxFQUFRQyxRQUFSLEVBQWtCQyxHQUFsQixDQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlU3RhdGVSZWYoaW5pdGlhbFN0YXRlKSB7XG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoaW5pdGlhbFN0YXRlKTtcbiAgY29uc3QgcmVmID0gdXNlUmVmKCk7XG4gIGNvbnN0IHNldFZhbHVlID0gdXNlQ2FsbGJhY2soXG4gICAgbmV4dFZhbHVlID0+IHtcbiAgICAgIGlmICh0eXBlb2YgbmV4dFZhbHVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHNldFZhbHVlKHN0YXRlID0+IHtcbiAgICAgICAgICBuZXh0VmFsdWUgPSBuZXh0VmFsdWUoc3RhdGUpO1xuXG4gICAgICAgICAgcmVmLmN1cnJlbnQgPSBuZXh0VmFsdWU7XG5cbiAgICAgICAgICByZXR1cm4gbmV4dFZhbHVlO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlZi5jdXJyZW50ID0gbmV4dFZhbHVlO1xuXG4gICAgICAgIHNldFZhbHVlKG5leHRWYWx1ZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBbcmVmLCBzZXRTdGF0ZV1cbiAgKTtcblxuICByZWYuY3VycmVudCA9IHN0YXRlO1xuXG4gIHJldHVybiBbc3RhdGUsIHNldFN0YXRlLCByZWZdO1xufVxuIl19