import classNames from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import AutoHideFollowButton from './ScrollToBottom/AutoHideFollowButton';
import Composer from './ScrollToBottom/Composer';
import Panel from './ScrollToBottom/Panel';
import useStyleToClassName from './hooks/internal/useStyleToClassName';
var ROOT_STYLE = {
  position: 'relative'
};

var BasicScrollToBottomCore = function BasicScrollToBottomCore(_ref) {
  var children = _ref.children,
      className = _ref.className,
      followButtonClassName = _ref.followButtonClassName,
      scrollViewClassName = _ref.scrollViewClassName;
  var rootCSS = useStyleToClassName()(ROOT_STYLE);
  return /*#__PURE__*/React.createElement("div", {
    className: classNames(rootCSS, (className || '') + '')
  }, /*#__PURE__*/React.createElement(Panel, {
    className: (scrollViewClassName || '') + ''
  }, children), /*#__PURE__*/React.createElement(AutoHideFollowButton, {
    className: (followButtonClassName || '') + ''
  }));
};

BasicScrollToBottomCore.defaultProps = {
  children: undefined,
  className: undefined,
  followButtonClassName: undefined,
  scrollViewClassName: undefined
};
BasicScrollToBottomCore.propTypes = {
  children: PropTypes.any,
  className: PropTypes.string,
  followButtonClassName: PropTypes.string,
  scrollViewClassName: PropTypes.string
};

var BasicScrollToBottom = function BasicScrollToBottom(_ref2) {
  var checkInterval = _ref2.checkInterval,
      children = _ref2.children,
      className = _ref2.className,
      debounce = _ref2.debounce,
      debug = _ref2.debug,
      followButtonClassName = _ref2.followButtonClassName,
      initialScrollBehavior = _ref2.initialScrollBehavior,
      mode = _ref2.mode,
      nonce = _ref2.nonce,
      scroller = _ref2.scroller,
      scrollViewClassName = _ref2.scrollViewClassName;
  return /*#__PURE__*/React.createElement(Composer, {
    checkInterval: checkInterval,
    debounce: debounce,
    debug: debug,
    initialScrollBehavior: initialScrollBehavior,
    mode: mode,
    nonce: nonce,
    scroller: scroller
  }, /*#__PURE__*/React.createElement(BasicScrollToBottomCore, {
    className: className,
    followButtonClassName: followButtonClassName,
    scrollViewClassName: scrollViewClassName
  }, children));
};

BasicScrollToBottom.defaultProps = {
  checkInterval: undefined,
  children: undefined,
  className: undefined,
  debounce: undefined,
  debug: undefined,
  followButtonClassName: undefined,
  initialScrollBehavior: 'smooth',
  mode: undefined,
  nonce: undefined,
  scrollViewClassName: undefined
};
BasicScrollToBottom.propTypes = {
  checkInterval: PropTypes.number,
  children: PropTypes.any,
  className: PropTypes.string,
  debounce: PropTypes.number,
  debug: PropTypes.bool,
  followButtonClassName: PropTypes.string,
  initialScrollBehavior: PropTypes.oneOf(['auto', 'smooth']),
  mode: PropTypes.oneOf(['bottom', 'top']),
  nonce: PropTypes.string,
  scrollViewClassName: PropTypes.string
};
export default BasicScrollToBottom;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9CYXNpY1Njcm9sbFRvQm90dG9tLmpzIl0sIm5hbWVzIjpbImNsYXNzTmFtZXMiLCJQcm9wVHlwZXMiLCJSZWFjdCIsIkF1dG9IaWRlRm9sbG93QnV0dG9uIiwiQ29tcG9zZXIiLCJQYW5lbCIsInVzZVN0eWxlVG9DbGFzc05hbWUiLCJST09UX1NUWUxFIiwicG9zaXRpb24iLCJCYXNpY1Njcm9sbFRvQm90dG9tQ29yZSIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwiZm9sbG93QnV0dG9uQ2xhc3NOYW1lIiwic2Nyb2xsVmlld0NsYXNzTmFtZSIsInJvb3RDU1MiLCJkZWZhdWx0UHJvcHMiLCJ1bmRlZmluZWQiLCJwcm9wVHlwZXMiLCJhbnkiLCJzdHJpbmciLCJCYXNpY1Njcm9sbFRvQm90dG9tIiwiY2hlY2tJbnRlcnZhbCIsImRlYm91bmNlIiwiZGVidWciLCJpbml0aWFsU2Nyb2xsQmVoYXZpb3IiLCJtb2RlIiwibm9uY2UiLCJzY3JvbGxlciIsIm51bWJlciIsImJvb2wiLCJvbmVPZiJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsVUFBUCxNQUF1QixZQUF2QjtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxPQUFPQyxLQUFQLE1BQWtCLE9BQWxCO0FBRUEsT0FBT0Msb0JBQVAsTUFBaUMsdUNBQWpDO0FBQ0EsT0FBT0MsUUFBUCxNQUFxQiwyQkFBckI7QUFDQSxPQUFPQyxLQUFQLE1BQWtCLHdCQUFsQjtBQUNBLE9BQU9DLG1CQUFQLE1BQWdDLHNDQUFoQztBQUVBLElBQU1DLFVBQVUsR0FBRztBQUNqQkMsRUFBQUEsUUFBUSxFQUFFO0FBRE8sQ0FBbkI7O0FBSUEsSUFBTUMsdUJBQXVCLEdBQUcsU0FBMUJBLHVCQUEwQixPQUF5RTtBQUFBLE1BQXRFQyxRQUFzRSxRQUF0RUEsUUFBc0U7QUFBQSxNQUE1REMsU0FBNEQsUUFBNURBLFNBQTREO0FBQUEsTUFBakRDLHFCQUFpRCxRQUFqREEscUJBQWlEO0FBQUEsTUFBMUJDLG1CQUEwQixRQUExQkEsbUJBQTBCO0FBQ3ZHLE1BQU1DLE9BQU8sR0FBR1IsbUJBQW1CLEdBQUdDLFVBQUgsQ0FBbkM7QUFFQSxzQkFDRTtBQUFLLElBQUEsU0FBUyxFQUFFUCxVQUFVLENBQUNjLE9BQUQsRUFBVSxDQUFDSCxTQUFTLElBQUksRUFBZCxJQUFvQixFQUE5QjtBQUExQixrQkFDRSxvQkFBQyxLQUFEO0FBQU8sSUFBQSxTQUFTLEVBQUUsQ0FBQ0UsbUJBQW1CLElBQUksRUFBeEIsSUFBOEI7QUFBaEQsS0FBcURILFFBQXJELENBREYsZUFFRSxvQkFBQyxvQkFBRDtBQUFzQixJQUFBLFNBQVMsRUFBRSxDQUFDRSxxQkFBcUIsSUFBSSxFQUExQixJQUFnQztBQUFqRSxJQUZGLENBREY7QUFNRCxDQVREOztBQVdBSCx1QkFBdUIsQ0FBQ00sWUFBeEIsR0FBdUM7QUFDckNMLEVBQUFBLFFBQVEsRUFBRU0sU0FEMkI7QUFFckNMLEVBQUFBLFNBQVMsRUFBRUssU0FGMEI7QUFHckNKLEVBQUFBLHFCQUFxQixFQUFFSSxTQUhjO0FBSXJDSCxFQUFBQSxtQkFBbUIsRUFBRUc7QUFKZ0IsQ0FBdkM7QUFPQVAsdUJBQXVCLENBQUNRLFNBQXhCLEdBQW9DO0FBQ2xDUCxFQUFBQSxRQUFRLEVBQUVULFNBQVMsQ0FBQ2lCLEdBRGM7QUFFbENQLEVBQUFBLFNBQVMsRUFBRVYsU0FBUyxDQUFDa0IsTUFGYTtBQUdsQ1AsRUFBQUEscUJBQXFCLEVBQUVYLFNBQVMsQ0FBQ2tCLE1BSEM7QUFJbENOLEVBQUFBLG1CQUFtQixFQUFFWixTQUFTLENBQUNrQjtBQUpHLENBQXBDOztBQU9BLElBQU1DLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0IsUUFZdEI7QUFBQSxNQVhKQyxhQVdJLFNBWEpBLGFBV0k7QUFBQSxNQVZKWCxRQVVJLFNBVkpBLFFBVUk7QUFBQSxNQVRKQyxTQVNJLFNBVEpBLFNBU0k7QUFBQSxNQVJKVyxRQVFJLFNBUkpBLFFBUUk7QUFBQSxNQVBKQyxLQU9JLFNBUEpBLEtBT0k7QUFBQSxNQU5KWCxxQkFNSSxTQU5KQSxxQkFNSTtBQUFBLE1BTEpZLHFCQUtJLFNBTEpBLHFCQUtJO0FBQUEsTUFKSkMsSUFJSSxTQUpKQSxJQUlJO0FBQUEsTUFISkMsS0FHSSxTQUhKQSxLQUdJO0FBQUEsTUFGSkMsUUFFSSxTQUZKQSxRQUVJO0FBQUEsTUFESmQsbUJBQ0ksU0FESkEsbUJBQ0k7QUFDSixzQkFDRSxvQkFBQyxRQUFEO0FBQ0UsSUFBQSxhQUFhLEVBQUVRLGFBRGpCO0FBRUUsSUFBQSxRQUFRLEVBQUVDLFFBRlo7QUFHRSxJQUFBLEtBQUssRUFBRUMsS0FIVDtBQUlFLElBQUEscUJBQXFCLEVBQUVDLHFCQUp6QjtBQUtFLElBQUEsSUFBSSxFQUFFQyxJQUxSO0FBTUUsSUFBQSxLQUFLLEVBQUVDLEtBTlQ7QUFPRSxJQUFBLFFBQVEsRUFBRUM7QUFQWixrQkFTRSxvQkFBQyx1QkFBRDtBQUNFLElBQUEsU0FBUyxFQUFFaEIsU0FEYjtBQUVFLElBQUEscUJBQXFCLEVBQUVDLHFCQUZ6QjtBQUdFLElBQUEsbUJBQW1CLEVBQUVDO0FBSHZCLEtBS0dILFFBTEgsQ0FURixDQURGO0FBbUJELENBaENEOztBQWtDQVUsbUJBQW1CLENBQUNMLFlBQXBCLEdBQW1DO0FBQ2pDTSxFQUFBQSxhQUFhLEVBQUVMLFNBRGtCO0FBRWpDTixFQUFBQSxRQUFRLEVBQUVNLFNBRnVCO0FBR2pDTCxFQUFBQSxTQUFTLEVBQUVLLFNBSHNCO0FBSWpDTSxFQUFBQSxRQUFRLEVBQUVOLFNBSnVCO0FBS2pDTyxFQUFBQSxLQUFLLEVBQUVQLFNBTDBCO0FBTWpDSixFQUFBQSxxQkFBcUIsRUFBRUksU0FOVTtBQU9qQ1EsRUFBQUEscUJBQXFCLEVBQUUsUUFQVTtBQVFqQ0MsRUFBQUEsSUFBSSxFQUFFVCxTQVIyQjtBQVNqQ1UsRUFBQUEsS0FBSyxFQUFFVixTQVQwQjtBQVVqQ0gsRUFBQUEsbUJBQW1CLEVBQUVHO0FBVlksQ0FBbkM7QUFhQUksbUJBQW1CLENBQUNILFNBQXBCLEdBQWdDO0FBQzlCSSxFQUFBQSxhQUFhLEVBQUVwQixTQUFTLENBQUMyQixNQURLO0FBRTlCbEIsRUFBQUEsUUFBUSxFQUFFVCxTQUFTLENBQUNpQixHQUZVO0FBRzlCUCxFQUFBQSxTQUFTLEVBQUVWLFNBQVMsQ0FBQ2tCLE1BSFM7QUFJOUJHLEVBQUFBLFFBQVEsRUFBRXJCLFNBQVMsQ0FBQzJCLE1BSlU7QUFLOUJMLEVBQUFBLEtBQUssRUFBRXRCLFNBQVMsQ0FBQzRCLElBTGE7QUFNOUJqQixFQUFBQSxxQkFBcUIsRUFBRVgsU0FBUyxDQUFDa0IsTUFOSDtBQU85QkssRUFBQUEscUJBQXFCLEVBQUV2QixTQUFTLENBQUM2QixLQUFWLENBQWdCLENBQUMsTUFBRCxFQUFTLFFBQVQsQ0FBaEIsQ0FQTztBQVE5QkwsRUFBQUEsSUFBSSxFQUFFeEIsU0FBUyxDQUFDNkIsS0FBVixDQUFnQixDQUFDLFFBQUQsRUFBVyxLQUFYLENBQWhCLENBUndCO0FBUzlCSixFQUFBQSxLQUFLLEVBQUV6QixTQUFTLENBQUNrQixNQVRhO0FBVTlCTixFQUFBQSxtQkFBbUIsRUFBRVosU0FBUyxDQUFDa0I7QUFWRCxDQUFoQztBQWFBLGVBQWVDLG1CQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IEF1dG9IaWRlRm9sbG93QnV0dG9uIGZyb20gJy4vU2Nyb2xsVG9Cb3R0b20vQXV0b0hpZGVGb2xsb3dCdXR0b24nO1xuaW1wb3J0IENvbXBvc2VyIGZyb20gJy4vU2Nyb2xsVG9Cb3R0b20vQ29tcG9zZXInO1xuaW1wb3J0IFBhbmVsIGZyb20gJy4vU2Nyb2xsVG9Cb3R0b20vUGFuZWwnO1xuaW1wb3J0IHVzZVN0eWxlVG9DbGFzc05hbWUgZnJvbSAnLi9ob29rcy9pbnRlcm5hbC91c2VTdHlsZVRvQ2xhc3NOYW1lJztcblxuY29uc3QgUk9PVF9TVFlMRSA9IHtcbiAgcG9zaXRpb246ICdyZWxhdGl2ZSdcbn07XG5cbmNvbnN0IEJhc2ljU2Nyb2xsVG9Cb3R0b21Db3JlID0gKHsgY2hpbGRyZW4sIGNsYXNzTmFtZSwgZm9sbG93QnV0dG9uQ2xhc3NOYW1lLCBzY3JvbGxWaWV3Q2xhc3NOYW1lIH0pID0+IHtcbiAgY29uc3Qgcm9vdENTUyA9IHVzZVN0eWxlVG9DbGFzc05hbWUoKShST09UX1NUWUxFKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzKHJvb3RDU1MsIChjbGFzc05hbWUgfHwgJycpICsgJycpfT5cbiAgICAgIDxQYW5lbCBjbGFzc05hbWU9eyhzY3JvbGxWaWV3Q2xhc3NOYW1lIHx8ICcnKSArICcnfT57Y2hpbGRyZW59PC9QYW5lbD5cbiAgICAgIDxBdXRvSGlkZUZvbGxvd0J1dHRvbiBjbGFzc05hbWU9eyhmb2xsb3dCdXR0b25DbGFzc05hbWUgfHwgJycpICsgJyd9IC8+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5CYXNpY1Njcm9sbFRvQm90dG9tQ29yZS5kZWZhdWx0UHJvcHMgPSB7XG4gIGNoaWxkcmVuOiB1bmRlZmluZWQsXG4gIGNsYXNzTmFtZTogdW5kZWZpbmVkLFxuICBmb2xsb3dCdXR0b25DbGFzc05hbWU6IHVuZGVmaW5lZCxcbiAgc2Nyb2xsVmlld0NsYXNzTmFtZTogdW5kZWZpbmVkXG59O1xuXG5CYXNpY1Njcm9sbFRvQm90dG9tQ29yZS5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55LFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGZvbGxvd0J1dHRvbkNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2Nyb2xsVmlld0NsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuY29uc3QgQmFzaWNTY3JvbGxUb0JvdHRvbSA9ICh7XG4gIGNoZWNrSW50ZXJ2YWwsXG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUsXG4gIGRlYm91bmNlLFxuICBkZWJ1ZyxcbiAgZm9sbG93QnV0dG9uQ2xhc3NOYW1lLFxuICBpbml0aWFsU2Nyb2xsQmVoYXZpb3IsXG4gIG1vZGUsXG4gIG5vbmNlLFxuICBzY3JvbGxlcixcbiAgc2Nyb2xsVmlld0NsYXNzTmFtZVxufSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb21wb3NlclxuICAgICAgY2hlY2tJbnRlcnZhbD17Y2hlY2tJbnRlcnZhbH1cbiAgICAgIGRlYm91bmNlPXtkZWJvdW5jZX1cbiAgICAgIGRlYnVnPXtkZWJ1Z31cbiAgICAgIGluaXRpYWxTY3JvbGxCZWhhdmlvcj17aW5pdGlhbFNjcm9sbEJlaGF2aW9yfVxuICAgICAgbW9kZT17bW9kZX1cbiAgICAgIG5vbmNlPXtub25jZX1cbiAgICAgIHNjcm9sbGVyPXtzY3JvbGxlcn1cbiAgICA+XG4gICAgICA8QmFzaWNTY3JvbGxUb0JvdHRvbUNvcmVcbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWV9XG4gICAgICAgIGZvbGxvd0J1dHRvbkNsYXNzTmFtZT17Zm9sbG93QnV0dG9uQ2xhc3NOYW1lfVxuICAgICAgICBzY3JvbGxWaWV3Q2xhc3NOYW1lPXtzY3JvbGxWaWV3Q2xhc3NOYW1lfVxuICAgICAgPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L0Jhc2ljU2Nyb2xsVG9Cb3R0b21Db3JlPlxuICAgIDwvQ29tcG9zZXI+XG4gICk7XG59O1xuXG5CYXNpY1Njcm9sbFRvQm90dG9tLmRlZmF1bHRQcm9wcyA9IHtcbiAgY2hlY2tJbnRlcnZhbDogdW5kZWZpbmVkLFxuICBjaGlsZHJlbjogdW5kZWZpbmVkLFxuICBjbGFzc05hbWU6IHVuZGVmaW5lZCxcbiAgZGVib3VuY2U6IHVuZGVmaW5lZCxcbiAgZGVidWc6IHVuZGVmaW5lZCxcbiAgZm9sbG93QnV0dG9uQ2xhc3NOYW1lOiB1bmRlZmluZWQsXG4gIGluaXRpYWxTY3JvbGxCZWhhdmlvcjogJ3Ntb290aCcsXG4gIG1vZGU6IHVuZGVmaW5lZCxcbiAgbm9uY2U6IHVuZGVmaW5lZCxcbiAgc2Nyb2xsVmlld0NsYXNzTmFtZTogdW5kZWZpbmVkXG59O1xuXG5CYXNpY1Njcm9sbFRvQm90dG9tLnByb3BUeXBlcyA9IHtcbiAgY2hlY2tJbnRlcnZhbDogUHJvcFR5cGVzLm51bWJlcixcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5hbnksXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZGVib3VuY2U6IFByb3BUeXBlcy5udW1iZXIsXG4gIGRlYnVnOiBQcm9wVHlwZXMuYm9vbCxcbiAgZm9sbG93QnV0dG9uQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpbml0aWFsU2Nyb2xsQmVoYXZpb3I6IFByb3BUeXBlcy5vbmVPZihbJ2F1dG8nLCAnc21vb3RoJ10pLFxuICBtb2RlOiBQcm9wVHlwZXMub25lT2YoWydib3R0b20nLCAndG9wJ10pLFxuICBub25jZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2Nyb2xsVmlld0NsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQmFzaWNTY3JvbGxUb0JvdHRvbTtcbiJdfQ==