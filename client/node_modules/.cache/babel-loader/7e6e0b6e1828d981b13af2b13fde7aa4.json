{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/juefei/Desktop/cs510-course-project/client/src/components/Questions/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport SearchBox from '../Home/SearchBox/SearchBox';\nimport { Link } from 'react-router-dom';\nimport QuestionTab from './QuestionTab/QuestionTab';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport './Questions.css';\nlet socket;\n\nconst Questions = ({\n  location\n}) => {\n  _s();\n\n  const {\n    university,\n    course\n  } = queryString.parse(location.search);\n  const ENDPOINT = 'localhost:5000';\n  const [searchQuestion, setSearchQuestion] = useState('');\n  const [questions, setQuestions] = useState([]); // search popup list\n\n  const [newSearch, setNewSearch] = useState('');\n  const [createTitle, setCreateTitle] = useState('');\n  const [createDescription, setCreateDescription] = useState('');\n  const [createQuestion, setCreateQuestion] = useState([]);\n  const [update, setUpdate] = useState(0); // alert question updates\n\n  const remindCourseUpdate = () => {\n    if (update === 0) {\n      // reminds other UseEffects to refresh course list\n      setUpdate(update + 1);\n    } else {\n      setUpdate(update - 1);\n    }\n  };\n\n  useEffect(() => {\n    if (newSearch.length === 0) {\n      return;\n    }\n\n    socket.emit(\"searchQuestion\", {\n      question: newSearch\n    }, message => {\n      console.log(\"search question: \", newSearch, message); // remindSearchUpdate();\n\n      setQuestions(message[\"questions\"]);\n      console.log(\"set\", questions);\n    });\n  }, [newSearch]);\n  useEffect(() => {\n    if (createQuestion.length === 0) {\n      return;\n    }\n\n    socket.emit(\"createQuestion\", {\n      title: createTitle,\n      description: createDescription\n    }, message => {\n      console.log(\"create question: \", message);\n    });\n  }, [createQuestion]);\n  useEffect(() => {\n    socket = io(ENDPOINT); // initially show all questions\n\n    socket.emit('getQuestions', {\n      message: \"List Questions\"\n    }, message => {\n      console.log(\"getQuestions:\", message[\"questions\"]);\n      setQuestions(message[\"questions\"]);\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homeOuterContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeInnerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"heading\",\n        children: [\"Welcome to \", university, \"-\", course]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \" Search Question here...\",\n        className: \"homeInput\",\n        type: \"text\",\n        onChange: event => setSearchQuestion(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button mt-20\",\n        type: \"submit\",\n        onClick: event => setNewSearch(searchQuestion),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"courses\",\n        children: /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n          children: questions.map((question, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(QuestionTab, {\n              question: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 58\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"heading\",\n          children: \"Create Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \" Enter title here...\",\n          className: \"homeInput\",\n          type: \"text\",\n          onChange: event => setCreateTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \" Enter description here...\",\n          className: \"homeInput\",\n          type: \"text\",\n          onChange: event => setCreateDescription(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button mt-20\",\n          type: \"submit\",\n          onClick: event => setCreateQuestion([createTitle, createDescription]),\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Questions, \"bwI2b9WohHHSEvFkBGCNg2yQvs0=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/juefei/Desktop/cs510-course-project/client/src/components/Questions/Questions.js"],"names":["React","useState","useEffect","queryString","io","SearchBox","Link","QuestionTab","ScrollToBottom","socket","Questions","location","university","course","parse","search","ENDPOINT","searchQuestion","setSearchQuestion","questions","setQuestions","newSearch","setNewSearch","createTitle","setCreateTitle","createDescription","setCreateDescription","createQuestion","setCreateQuestion","update","setUpdate","remindCourseUpdate","length","emit","question","message","console","log","title","description","off","event","target","value","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport SearchBox from '../Home/SearchBox/SearchBox';\nimport { Link } from 'react-router-dom';\nimport QuestionTab from './QuestionTab/QuestionTab';\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\n\nimport './Questions.css';\n\nlet socket; \n\nconst Questions = ( {location} ) => {\n    const { university, course } = queryString.parse(location.search);\n    const ENDPOINT = 'localhost:5000';\n    const [searchQuestion, setSearchQuestion] = useState('');\n    const [questions, setQuestions] = useState([]); // search popup list\n    const [newSearch, setNewSearch] = useState('');\n    const [createTitle, setCreateTitle] = useState('');\n    const [createDescription, setCreateDescription] = useState('');\n    const [createQuestion, setCreateQuestion] = useState([]);\n    const [update, setUpdate] = useState(0); // alert question updates\n\n    const remindCourseUpdate = () => {\n        if (update === 0) { // reminds other UseEffects to refresh course list\n            setUpdate(update + 1);\n        } else {\n            setUpdate(update - 1);\n        }\n    }\n\n\n    useEffect(() => {\n        if (newSearch.length === 0) {\n            return;\n        }\n        socket.emit(\"searchQuestion\", { question: newSearch }, (message)=> {\n            console.log(\"search question: \", newSearch, message);\n            // remindSearchUpdate();\n            setQuestions(message[\"questions\"]);\n            console.log(\"set\", questions);\n        });\n        \n    }, [newSearch]);\n\n    useEffect(() => {\n        if (createQuestion.length === 0) {\n            return;\n        }\n        socket.emit(\"createQuestion\", { title: createTitle, description: createDescription }, (message)=> {\n            console.log(\"create question: \", message);\n        });\n        \n    }, [createQuestion]);\n\n   \n    useEffect(() => {\n        socket = io(ENDPOINT);\n\n        // initially show all questions\n        socket.emit('getQuestions', { message: \"List Questions\" }, (message) => {\n            console.log(\"getQuestions:\", message[\"questions\"]);\n            setQuestions(message[\"questions\"]);\n        });\n\n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n    }, [ENDPOINT, location.search]); \n    \n    \n    \n\n    return (\n    <div className=\"homeOuterContainer\">\n        <div className=\"homeInnerContainer\">\n            <h2 className=\"heading\">Welcome to {university}-{course}</h2>\n            <input placeholder=\" Search Question here...\" className=\"homeInput\" type=\"text\" onChange={(event) => setSearchQuestion(event.target.value)} />\n            <button className=\"button mt-20\" type=\"submit\" onClick={(event) => setNewSearch(searchQuestion)}>Search</button>\n\n            {/* List of Questions */}\n            <div className=\"courses\">\n            <ScrollToBottom>\n            {questions.map((question, i) => <div key={i}><QuestionTab question={question} /></div>)}\n            </ScrollToBottom>\n             </div>\n            \n            <div>\n                <h3 className=\"heading\">Create Question</h3>\n                <input placeholder=\" Enter title here...\" className=\"homeInput\" type=\"text\" onChange={(event) => setCreateTitle(event.target.value)} />\n                <input placeholder=\" Enter description here...\" className=\"homeInput\" type=\"text\" onChange={(event) => setCreateDescription(event.target.value)} />\n                <button className=\"button mt-20\" type=\"submit\" onClick={(event) => setCreateQuestion([createTitle, createDescription])}>Create</button>\n            </div>\n             \n        </div>\n        \n\n    </div>\n    )\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}