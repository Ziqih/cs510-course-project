{"ast":null,"code":"/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 1.5, 5] }] */\nimport { useCallback, useLayoutEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction squareStepper(current, to) {\n  var sign = Math.sign(to - current);\n  var step = Math.sqrt(Math.abs(to - current));\n  var next = current + step * sign;\n\n  if (sign > 0) {\n    return Math.min(to, next);\n  }\n\n  return Math.max(to, next);\n}\n\nfunction step(from, to, stepper, index) {\n  var next = from;\n\n  for (var i = 0; i < index; i++) {\n    next = stepper(next, to);\n  }\n\n  return next;\n}\n\nvar SpineTo = function SpineTo(_ref) {\n  var name = _ref.name,\n      onEnd = _ref.onEnd,\n      target = _ref.target,\n      value = _ref.value;\n  var animator = useRef();\n  var animate = useCallback(function (name, from, to, index) {\n    var start = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Date.now();\n\n    if (to === '100%' || typeof to === 'number') {\n      cancelAnimationFrame(animator.current);\n      animator.current = requestAnimationFrame(function () {\n        if (target) {\n          var toNumber = to === '100%' ? target.scrollHeight - target.offsetHeight : to;\n          var nextValue = step(from, toNumber, squareStepper, (Date.now() - start) / 5);\n\n          if (Math.abs(toNumber - nextValue) < 1.5) {\n            nextValue = toNumber;\n          }\n\n          target[name] = nextValue;\n\n          if (toNumber === nextValue) {\n            onEnd && onEnd(true);\n          } else {\n            animate(name, from, to, index + 1, start);\n          }\n        }\n      });\n    }\n  }, [animator, onEnd, target]);\n  var handleCancelAnimation = useCallback(function () {\n    cancelAnimationFrame(animator.current);\n    onEnd && onEnd(false);\n  }, [onEnd]);\n  useLayoutEffect(function () {\n    animate(name, target[name], value, 1);\n\n    if (target) {\n      target.addEventListener('pointerdown', handleCancelAnimation, {\n        passive: true\n      });\n      target.addEventListener('wheel', handleCancelAnimation, {\n        passive: true\n      });\n      return function () {\n        target.removeEventListener('pointerdown', handleCancelAnimation);\n        target.removeEventListener('wheel', handleCancelAnimation);\n        cancelAnimationFrame(animator.current);\n      };\n    }\n\n    return function () {\n      return cancelAnimationFrame(animator.current);\n    };\n  }, [animate, animator, handleCancelAnimation, name, target, value]);\n  return false;\n};\n\nSpineTo.propTypes = {\n  name: PropTypes.string.isRequired,\n  onEnd: PropTypes.func,\n  target: PropTypes.any.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['100%'])]).isRequired\n};\nexport default SpineTo;","map":{"version":3,"sources":["../../src/SpineTo.js"],"names":["sign","Math","to","step","next","current","i","stepper","SpineTo","name","onEnd","target","value","animator","useRef","animate","useCallback","start","Date","cancelAnimationFrame","requestAnimationFrame","toNumber","nextValue","index","handleCancelAnimation","useLayoutEffect","passive","PropTypes","isRequired"],"mappings":"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","sourcesContent":["/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 1.5, 5] }] */\n\nimport { useCallback, useLayoutEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction squareStepper(current, to) {\n  const sign = Math.sign(to - current);\n  const step = Math.sqrt(Math.abs(to - current));\n  const next = current + step * sign;\n\n  if (sign > 0) {\n    return Math.min(to, next);\n  }\n\n  return Math.max(to, next);\n}\n\nfunction step(from, to, stepper, index) {\n  let next = from;\n\n  for (let i = 0; i < index; i++) {\n    next = stepper(next, to);\n  }\n\n  return next;\n}\n\nconst SpineTo = ({ name, onEnd, target, value }) => {\n  const animator = useRef();\n\n  const animate = useCallback(\n    (name, from, to, index, start = Date.now()) => {\n      if (to === '100%' || typeof to === 'number') {\n        cancelAnimationFrame(animator.current);\n\n        animator.current = requestAnimationFrame(() => {\n          if (target) {\n            const toNumber = to === '100%' ? target.scrollHeight - target.offsetHeight : to;\n            let nextValue = step(from, toNumber, squareStepper, (Date.now() - start) / 5);\n\n            if (Math.abs(toNumber - nextValue) < 1.5) {\n              nextValue = toNumber;\n            }\n\n            target[name] = nextValue;\n\n            if (toNumber === nextValue) {\n              onEnd && onEnd(true);\n            } else {\n              animate(name, from, to, index + 1, start);\n            }\n          }\n        });\n      }\n    },\n    [animator, onEnd, target]\n  );\n\n  const handleCancelAnimation = useCallback(() => {\n    cancelAnimationFrame(animator.current);\n    onEnd && onEnd(false);\n  }, [onEnd]);\n\n  useLayoutEffect(() => {\n    animate(name, target[name], value, 1);\n\n    if (target) {\n      target.addEventListener('pointerdown', handleCancelAnimation, { passive: true });\n      target.addEventListener('wheel', handleCancelAnimation, { passive: true });\n\n      return () => {\n        target.removeEventListener('pointerdown', handleCancelAnimation);\n        target.removeEventListener('wheel', handleCancelAnimation);\n        cancelAnimationFrame(animator.current);\n      };\n    }\n\n    return () => cancelAnimationFrame(animator.current);\n  }, [animate, animator, handleCancelAnimation, name, target, value]);\n\n  return false;\n};\n\nSpineTo.propTypes = {\n  name: PropTypes.string.isRequired,\n  onEnd: PropTypes.func,\n  target: PropTypes.any.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['100%'])]).isRequired\n};\n\nexport default SpineTo;\n"]},"metadata":{},"sourceType":"module"}