{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chichi/Desktop/cs510-course-project/client/src/components/Question/Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport SearchBox from '../Home/SearchBox/SearchBox';\nimport { Link } from 'react-router-dom';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport endorseIcon from '../../icons/closeIcon.png';\nimport './Question.css';\nlet socket;\n\nconst Question = ({\n  location\n}) => {\n  _s();\n\n  const {\n    id\n  } = queryString.parse(location.search);\n  const ENDPOINT = 'localhost:5000';\n  const [question, setQuestion] = useState({});\n  const [answers, setAnswers] = useState([]);\n  const [answer, setAnswer] = useState('');\n  const [user, setUser] = useState('');\n  const [submitAnswer, setSubmitAnswer] = useState([]);\n  const [endorseAnswerId, setEndorseAnswerId] = useState(-1);\n  useEffect(() => {\n    socket = io(ENDPOINT); // initially show all questions\n\n    socket.emit('getQuestion', {\n      id: id,\n      message: \"Get Question\"\n    }, message => {\n      console.log(\"getQuestion:\", message[\"question\"]);\n      setQuestion(message[\"question\"]);\n      setAnswers(message[\"question\"][\"answers\"]);\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n\n  const renderRow = (attribute, value) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionBox\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"questionText\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: attribute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 49\n          }, this), \": \", value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, attribute, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(() => {\n    if (submitAnswer.length === 0 || submitAnswer[0].length == 0) {\n      return;\n    }\n\n    socket.emit(\"addAnswer\", {\n      id: id,\n      answer: submitAnswer[0],\n      user: submitAnswer[1]\n    }, message => {\n      console.log(\"create answer\", message);\n    });\n  }, [submitAnswer]);\n  useEffect(() => {\n    if (endorseAnswerId == -1) {\n      return;\n    }\n\n    socket.emit(\"endorseAnswer\", {}, message => {\n      console.log(\"create answer\", message);\n    });\n  }, [endorseAnswerId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homeOuterContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeInnerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"heading\",\n        children: [\"Question \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), renderRow(\"Title\", question[\"title\"]), renderRow(\"Description\", question[\"description\"]), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"answersHeading\",\n        children: \"Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers\",\n        children: /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n          children: answers.map((key, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"courseContainer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"courseBox\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"sentText pl-10\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: key[\"user\"]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 63\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"courseText\",\n                  children: key[\"answer\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"endorseButton\",\n                  onClick: event => setEndorseAnswerId(i),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: closeIcon,\n                    alt: \"delete course\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 110\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"answersHeading\",\n        children: \"Answer it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \" Username (optional)\",\n        className: \"homeInput\",\n        type: \"text\",\n        onChange: event => setUser(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \" Enter your answer here...\",\n        className: \"homeInput\",\n        type: \"text\",\n        onChange: event => setAnswer(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button mt-20\",\n        type: \"submit\",\n        onClick: event => setSubmitAnswer([answer, user]),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"YEpO1rz3YRXC1Va05x6brk9T6OU=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/chichi/Desktop/cs510-course-project/client/src/components/Question/Question.js"],"names":["React","useState","useEffect","queryString","io","SearchBox","Link","ScrollToBottom","endorseIcon","socket","Question","location","id","parse","search","ENDPOINT","question","setQuestion","answers","setAnswers","answer","setAnswer","user","setUser","submitAnswer","setSubmitAnswer","endorseAnswerId","setEndorseAnswerId","emit","message","console","log","off","renderRow","attribute","value","length","map","key","i","event","closeIcon","target"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,OAAO,gBAAP;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,QAAQ,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAkB;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAST,WAAW,CAACU,KAAZ,CAAkBF,QAAQ,CAACG,MAA3B,CAAf;AACA,QAAMC,QAAQ,GAAG,gBAAjB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACyB,eAAD,EAAkBC,kBAAlB,IAAwC1B,QAAQ,CAAC,CAAC,CAAF,CAAtD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,GAAGL,EAAE,CAACW,QAAD,CAAX,CADY,CAGZ;;AACAN,IAAAA,MAAM,CAACmB,IAAP,CAAY,aAAZ,EAA2B;AAAEhB,MAAAA,EAAE,EAAEA,EAAN;AAAUiB,MAAAA,OAAO,EAAE;AAAnB,KAA3B,EAAiEA,OAAD,IAAa;AACzEC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,OAAO,CAAC,UAAD,CAAnC;AACAZ,MAAAA,WAAW,CAACY,OAAO,CAAC,UAAD,CAAR,CAAX;AACAV,MAAAA,UAAU,CAACU,OAAO,CAAC,UAAD,CAAP,CAAoB,SAApB,CAAD,CAAV;AACH,KAJD;AAMA,WAAO,MAAM;AACTpB,MAAAA,MAAM,CAACmB,IAAP,CAAY,YAAZ;AACAnB,MAAAA,MAAM,CAACuB,GAAP;AACH,KAHD;AAIH,GAdQ,EAcN,CAACjB,QAAD,EAAWJ,QAAQ,CAACG,MAApB,CAdM,CAAT;;AAgBA,QAAMmB,SAAS,GAAG,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACpC,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA,kCAA4B;AAAA,sBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAA5B,QAAiDC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,OAAwCD,SAAxC;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARD;;AAUAhC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIsB,YAAY,CAACY,MAAb,KAAwB,CAAxB,IAA6BZ,YAAY,CAAC,CAAD,CAAZ,CAAgBY,MAAhB,IAA0B,CAA3D,EAA8D;AAC1D;AACH;;AACD3B,IAAAA,MAAM,CAACmB,IAAP,CAAY,WAAZ,EAAyB;AAAEhB,MAAAA,EAAE,EAAEA,EAAN;AAAUQ,MAAAA,MAAM,EAAEI,YAAY,CAAC,CAAD,CAA9B;AAAmCF,MAAAA,IAAI,EAAEE,YAAY,CAAC,CAAD;AAArD,KAAzB,EAAsFK,OAAD,IAAY;AAC7FC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,OAA7B;AACH,KAFD;AAIH,GARQ,EAQN,CAACL,YAAD,CARM,CAAT;AAUAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIwB,eAAe,IAAI,CAAC,CAAxB,EAA2B;AACvB;AACH;;AACDjB,IAAAA,MAAM,CAACmB,IAAP,CAAY,eAAZ,EAA6B,EAA7B,EAAmCC,OAAD,IAAY;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,OAA7B;AACH,KAFD;AAIH,GARQ,EAQN,CAACH,eAAD,CARM,CAAT;AAWA,sBACA;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,gCAAkCd,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGKqB,SAAS,CAAC,OAAD,EAAUjB,QAAQ,CAAC,OAAD,CAAlB,CAHd,EAIKiB,SAAS,CAAC,aAAD,EAAgBjB,QAAQ,CAAC,aAAD,CAAxB,CAJd,eAMI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOK;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACG,QAAC,cAAD;AAAA,oBACKE,OAAO,CAACmB,GAAR,CAAY,CAACC,GAAD,EAAMC,CAAN,KAAY;AACzB,gCACI;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,wCACI;AAAG,kBAAA,SAAS,EAAC,gBAAb;AAAA,yCAA8B;AAAA,8BAAID,GAAG,CAAC,MAAD;AAAP;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAG,kBAAA,SAAS,EAAC,YAAb;AAAA,4BAA2BA,GAAG,CAAC,QAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAQ,kBAAA,SAAS,EAAC,eAAlB;AAAkC,kBAAA,OAAO,EAAGE,KAAD,IAAWb,kBAAkB,CAACY,CAAD,CAAxE;AAAA,yCAA6E;AAAK,oBAAA,GAAG,EAAEE,SAAV;AAAqB,oBAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AAA7E;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,eAAsCF,CAAtC;AAAA;AAAA;AAAA;AAAA,oBADJ;AASC,WAVA;AADL;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAPL,eAsBK;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBL,eAuBK;AAAO,QAAA,WAAW,EAAC,sBAAnB;AAA0C,QAAA,SAAS,EAAC,WAApD;AAAgE,QAAA,IAAI,EAAC,MAArE;AAA4E,QAAA,QAAQ,EAAGC,KAAD,IAAWjB,OAAO,CAACiB,KAAK,CAACE,MAAN,CAAaP,KAAd;AAAxG;AAAA;AAAA;AAAA;AAAA,cAvBL,eAwBK;AAAO,QAAA,WAAW,EAAC,4BAAnB;AAAgD,QAAA,SAAS,EAAC,WAA1D;AAAsE,QAAA,IAAI,EAAC,MAA3E;AAAkF,QAAA,QAAQ,EAAGK,KAAD,IAAWnB,SAAS,CAACmB,KAAK,CAACE,MAAN,CAAaP,KAAd;AAAhH;AAAA;AAAA;AAAA;AAAA,cAxBL,eAyBK;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,OAAO,EAAGK,KAAD,IAAWf,eAAe,CAAC,CAACL,MAAD,EAASE,IAAT,CAAD,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAiCH,CA3FD;;GAAMZ,Q;;KAAAA,Q;AA6FN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport SearchBox from '../Home/SearchBox/SearchBox';\nimport { Link } from 'react-router-dom';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport endorseIcon from '../../icons/closeIcon.png'\n\nimport './Question.css';\n\nlet socket; \n\nconst Question = ( {location} ) => {\n    const { id } = queryString.parse(location.search);\n    const ENDPOINT = 'localhost:5000';\n    const [question, setQuestion] = useState({});\n    const [answers, setAnswers] = useState([]);\n    const [answer, setAnswer] = useState('');\n    const [user, setUser] = useState('');\n    const [submitAnswer, setSubmitAnswer] = useState([]);\n    const [endorseAnswerId, setEndorseAnswerId] = useState(-1);\n\n   \n    useEffect(() => {\n        socket = io(ENDPOINT);\n\n        // initially show all questions\n        socket.emit('getQuestion', { id: id, message: \"Get Question\" }, (message) => {\n            console.log(\"getQuestion:\", message[\"question\"]);\n            setQuestion(message[\"question\"]);\n            setAnswers(message[\"question\"][\"answers\"]);\n        });\n\n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n    }, [ENDPOINT, location.search]); \n\n    const renderRow = (attribute, value) => {\n        return (\n            <div className=\"questionContainer\" key={attribute}>\n                <div className=\"questionBox\">\n                    <p className=\"questionText\"><b>{attribute}</b>: {value}</p>\n                </div>\n            </div>\n        );\n    }\n    \n    useEffect(() => {\n        if (submitAnswer.length === 0 || submitAnswer[0].length == 0) {\n            return;\n        }\n        socket.emit(\"addAnswer\", { id: id, answer: submitAnswer[0], user: submitAnswer[1] }, (message)=> {\n            console.log(\"create answer\", message);\n        });\n        \n    }, [submitAnswer]);\n\n    useEffect(() => {\n        if (endorseAnswerId == -1) {\n            return;\n        }\n        socket.emit(\"endorseAnswer\", { }, (message)=> {\n            console.log(\"create answer\", message);\n        });\n        \n    }, [endorseAnswerId]);\n    \n\n    return (\n    <div className=\"homeOuterContainer\">\n        <div className=\"homeInnerContainer\">\n            <h2 className=\"heading\">Question {id}</h2>\n              \n            {renderRow(\"Title\", question[\"title\"])}\n            {renderRow(\"Description\", question[\"description\"])}\n            \n            <h2 className=\"answersHeading\">Answers</h2>\n             <div className=\"answers\">\n                <ScrollToBottom>\n                    {answers.map((key, i) => {\n                    return (\n                        <div className=\"courseContainer\" key={i}>\n                            <div className=\"courseBox\">\n                                <p className=\"sentText pl-10\"><b>{key[\"user\"]}</b></p>\n                                <p className=\"courseText\">{key[\"answer\"]}</p>\n                                <button className=\"endorseButton\" onClick={(event) => setEndorseAnswerId(i)}><img src={closeIcon} alt=\"delete course\"/></button>\n                            </div>\n                        </div>\n                        );\n                    })}\n                </ScrollToBottom>\n             </div>\n             <h2 className=\"answersHeading\">Answer it</h2>\n             <input placeholder=\" Username (optional)\" className=\"homeInput\" type=\"text\" onChange={(event) => setUser(event.target.value)} />\n             <input placeholder=\" Enter your answer here...\" className=\"homeInput\" type=\"text\" onChange={(event) => setAnswer(event.target.value)} />\n             <button className=\"button mt-20\" type=\"submit\" onClick={(event) => setSubmitAnswer([answer, user])}>Submit</button>\n        </div>\n        \n\n    </div>\n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}